Steps to bundle and create a react app without using create-react-app command

1) execute npm init command in terminal
- provide answers to certains questions asked in this step such as name,version,author etc., this will help to create package.json file

2) execute npm install -D parcel command in terminal
- parcel is a bundler that helps to bundle our react app
- '-D' or '--save-dev' indicates that the respective package is a development dependency
- without the above attributes, e.g. npm install react, indicates that react package needs to be installed as a dependency applicable for development as well as production.
- this step generates node_modules folder and package-lock.json file

3)execute npm install react command in terminal
  execute npm install react-dom command in terminal
- this will download react and react-dom packages in our application

4)remove the react related cdn links from index.html and add 'type=modules' in the script tag related to 'App.js' file in index.html

5) execute npx parcel index.html command in terminal
- this will help us to browse our application on a localhost url

6) to build our application
- remove   "main": "App.js" from package.json
- run npx parcel build index.html

7) add browserslist key in package.json
- browserslist indicates that the app needs to be supported by specified browsers and its versions or cover up certain % of users
- refer https://browserslist.dev/ url for syntax to add in browserslist in package.json file


THOERY ASSIGNMENT
1)What is `NPM`?
- npm is a package manager that helps us to download and install various packages/libraries in our application. It is commonly referred as node package manager.

2)What is `Parcel/Webpack`? Why do we need it?
- Parcel/Webpack are bundlers which help us to bundle and build our applicationn and make it production ready.It also helps us to start a server.

3)What is `.parcel-cache`?
- parcel-cache is a folder which stores or caches information about our project so that when we rebuild the project, it doesn't need to re-analyze everything and speeds up the rebuilding process.

4)What is `npx` ?
- npx is also called as node package execute. It is a npm package runner that helps you to execute any npm package with needing to install it in our project

5)What is difference between `dependencies` vs `devDependencies`
- dependencies are packages on which our project is depended. `devDependencies` are those packages that are needed only in development environment whereas `dependencies` are simple dependencies that are needed in dev as well as production environment.

6)What is Tree Shaking?
- tree shaking is the process of removing unwanted code. parcel bundler has tree shaking feature.

7)What is Hot Module Replacement?
- HMR or Hot Module Replacement is a process via which only the changes are reloaded instead of doing full reload. This speeds up the reload or render process.

8)List down your favourite 5 superpowers of Parcel and describe any 3 of them in your
own words.
- Minifying,Tree shaking,HMR,Zero config,https support.
- tree shaking is the process of removing unwanted and not in use code
- HMR or Hot Module Replacement is a process via which only the changes are reloaded instead of doing full reload. This speeds up the reload or render process.
- parcel provides https certificate possibility using which we can load our project with https and check if all features are working fine

9)What is `.gitignore`? What should we add and not add into it?
- .gitignore is a file that gets generated when we run 'git init' command in our project folder/repository. This file tells git to ignore certain files or folders and not deploy/push them to git.All the files/folders that gets regenerated can be mentioned in gitignore file,rest other files and folders which are part of project should not be added to gitignore.

10)What is the difference between `package.json` and `package-lock.json`?
- package.json file contains details of project such as name,version,author,scripts along with the dev and normal dependencies list
- package-lock.json contains detailed information about the packages or dependencies installed in our project along with transitive dependencies

11)Why should I not modify `package-lock.json`?
- package-lock.json contains detailed information about the packages or dependencies installed in our project with its version details along with transitive dependencies.Modifying it can cause the versions to be incompatible and break our production build.

12)What is `node_modules` ? Is it a good idea to push that on git?
- node_modules is a folder which contains multiple subfolders of the packages installed in our project as dependencies.Since it contains a lot of folders which makes it heavy and also it can be regenerated, thus we should not push it to git.

13)What is the `dist` folder?
- dist folder is generated by parcel. It contains minified form of our code.This version of code is used for production build, thus this folder is generated when we run npx parcel build related command.

14)What is `browserlists`?
- browserlists is a configuration added in package.json file that indicates the browsers and its versions on which the application will definitely successfully run.We can mention bowsers or its versions or % of people that needs to be covered

